{"version":3,"sources":["logo.svg","AppBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PrimarySearchAppBar","state","anchorEl","mobileMoreAnchorEl","handleProfileMenuOpen","event","_this","setState","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","_this$state","this","classes","props","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","react_default","a","createElement","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","Badge_default","badgeContent","Mail_default","Notifications_default","AccountCircle_default","className","root","AppBar_default","position","Toolbar_default","menuButton","aria-label","icons_Menu_default","Typography_default","title","variant","noWrap","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","grow","sectionDesktop","aria-owns","undefined","aria-haspopup","sectionMobile","MoreVert_default","React","Component","withStyles","theme","width","flexGrow","marginLeft","marginRight","Object","defineProperty","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","App","src_AppBar","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef0f1873.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing.unit * 3,\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\n\r\nclass PrimarySearchAppBar extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    mobileMoreAnchorEl: null\r\n  };\r\n\r\n  handleProfileMenuOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n    this.handleMobileMenuClose();\r\n  };\r\n\r\n  handleMobileMenuOpen = event => {\r\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMobileMenuClose = () => {\r\n    this.setState({ mobileMoreAnchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\r\n    const { classes } = this.props;\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const renderMenu = (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={isMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    const renderMobileMenu = (\r\n      <Menu\r\n        anchorEl={mobileMoreAnchorEl}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={isMobileMenuOpen}\r\n        onClose={this.handleMobileMenuClose}\r\n      >\r\n        <MenuItem>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <MailIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Messages</p>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={11} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Notifications</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={this.handleProfileMenuOpen}>\r\n          <IconButton color=\"inherit\">\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <p>Profile</p>\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n            >\r\n              Material-UI\r\n            </Typography>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={4} color=\"secondary\">\r\n                  <MailIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={17} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                aria-owns={isMenuOpen ? \"material-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMenu}\r\n        {renderMobileMenu}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPrimarySearchAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PrimarySearchAppBar);\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppBar from \"./AppBar\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <AppBar />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}